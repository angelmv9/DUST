@model IEnumerable<DUST.Models.Project>

@using DUST.Models.Enums
@using Microsoft.AspNetCore.Identity
@using DUST.Services.Interfaces

@inject UserManager<DUSTUser> UserManager
@inject IProjectService ProjectService

@{
    ViewData["Title"] = "Archived Projects";
    DUSTUser dustUser = await UserManager.GetUserAsync(User);
}

<!DOCTYPE html>
<html lang="en-US" dir="ltr">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>


<body>

    <!-- ===============================================-->
    <!--    Main Content-->
    <!-- ===============================================-->

    <div class="content">
        <div class="mb-9">
            <div id="projectSummary" data-list='{"valueNames":["projectName","assigness","start","deadline","projectprogress","priority","projectmanager"],"page":6,"pagination":true}'>
                <div class="row mb-4 gx-6 gy-3 align-items-center">
                    <div class="col-auto">
                        <h2 class="mb-0">Archived Projects</h2>
                    </div>
                </div>
                <div class="row g-3 justify-content-end align-items-end mb-4">
                    <div class="col-12 col-sm-auto">
                        <div class="d-flex align-items-center">
                            <div class="search-box">
                                <form class="position-relative" data-bs-toggle="search" data-bs-display="static">
                                    <input class="form-control search-input search" type="search" placeholder="Search projects" aria-label="Search" />
                                    <span class="fas fa-search search-box-icon"></span>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-responsive scrollbar">
                    <table class="table fs--1 mb-0 border-top border-200">
                        <thead>
                            <tr>
                                <th class="sort white-space-nowrap align-middle ps-0" scope="col" data-sort="projectName" style="width:30%;">
                                    @Html.DisplayNameFor(model => model.Name).ToUpper()
                                </th>
                                <th class="sort align-middle ps-3" scope="col" data-sort="assigness" style="width:10%;">
                                    MEMBERS
                                </th>
                                <th class="sort align-middle ps-3" scope="col" data-sort="projectmanager" style="width:10%;">
                                    PROJECT MANAGER
                                </th>
                                <th class="sort align-middle ps-3" scope="col" data-sort="start" style="width:10%;">
                                    @Html.DisplayNameFor(model => model.StartDate).ToUpper()
                                </th>
                                <th class="sort align-middle ps-3" scope="col" data-sort="deadline" style="width:10%;">
                                    @Html.DisplayNameFor(model => model.EndDate).ToUpper()
                                </th>

                                <th class="sort align-middle ps-3" scope="col" data-sort="projectprogress" style="width:5%;">
                                    PROGRESS
                                </th>

                                <th class="sort align-middle text-end" scope="col" data-sort="priority" style="width:10%;">
                                    PRIORITY
                                </th>
                                <th class="sort align-middle text-end" scope="col" style="width:5%;"></th>
                            </tr>
                        </thead>
                        <tbody class="list" id="project-list-table-body">
                            @foreach (var project in Model)
                            {
                                <tr class="position-static">
                                    @* Project Name *@
                                    <td class="align-middle white-space-nowrap time projectName ps-0 py-4">
                                        <a class="text-decoration-none fw-bold fs-0" asp-action="Details" asp-route-id="@project.Id">@Html.DisplayFor(modelItem => project.Name)</a>
                                    </td>
                                    @* Members *@
                                    <td class="align-middle white-space-nowrap assigness ps-3 py-4">
                                        <div class="avatar-group avatar-group-dense">
                                            @foreach (var member in project.Members)
                                            {
                                                <div class="avatar avatar-s  rounded-circle">
                                                    @if (member?.AvatarByteData != null)
                                                    {
                                                        <img class="rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarByteData))" />
                                                    }
                                                    else
                                                    {
                                                        <img class="rounded-circle" src="~/img/defaultUserImage.png" />
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </td>
                                    @* Project Manager *@
                                    <td class="align-middle white-space-nowrap projectmanager ps-3 py-4">
                                        <a class="d-flex align-items-center" href="#!">
                                            <div class="avatar avatar-s">
                                                @{
                                                    DUSTUser PM = (await ProjectService.GetProjectManagerAsync(project.Id));
                                                    string fullName = PM?.FullName;
                                                }
                                                <div class="avatar avatar-s  rounded-circle">
                                                    @if (PM != null)
                                                    {
                                                        @if (PM.AvatarByteData != null)
                                                        {
                                                            <img class="rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(PM.AvatarByteData))" />
                                                        }
                                                        else
                                                        {
                                                            <img class="rounded-circle" src="~/img/defaultUserImage.png" />
                                                        }
                                                    }
                                                </div>
                                            </div>
                                            <p class="mb-0 ms-1 fs--1 text-900">@fullName</p>
                                        </a>
                                    </td>
                                    @* Start Date *@
                                    <td class="align-middle white-space-nowrap start ps-3 py-4">
                                        <p class="mb-0 fs--1 text-900">@Html.DisplayFor(modelItem => project.StartDate)</p>
                                    </td>
                                    @* End Date *@
                                    <td class="align-middle white-space-nowrap deadline ps-3 py-4">
                                        <p class="mb-0 fs--1 text-900">@Html.DisplayFor(modelItem => project.EndDate)</p>
                                    </td>
                                    @* Progress *@
                                    <td class="align-middle white-space-nowrap ps-3 projectprogress">
                                        @{
                                            var start = project.StartDate.DateTime;
                                            var end = project.EndDate.DateTime;
                                            var today = DateTime.Now;
                                            var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                        }
                                        <p class="text-800 fs--2 mb-0">@percent%</p>
                                        <div class="progress" style="height:3px;">

                                            <div class="progress-bar bg-success" style="width: @percent%" role="progressbar" aria-valuenow="1" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                    </td>
                                    @* Priority *@
                                    <td class="align-middle white-space-nowrap text-end priority">
                                        @if (project.ProjectPriority?.Name == nameof(ProjectPriorityEnum.Urgent))
                                        {
                                            <span class="badge badge-phoenix fs--2 badge-phoenix-danger">URGENT<span class="ms-1" data-feather="alert-octagon" style="height:12.8px;width:12.8px;"></span></span>
                                        }
                                        else if (project.ProjectPriority?.Name == nameof(ProjectPriorityEnum.High))
                                        {
                                            <span class="badge badge-phoenix fs--2 badge-phoenix-warning">HIGH</span>
                                        }
                                        else if (project.ProjectPriority?.Name == nameof(ProjectPriorityEnum.Medium))
                                        {
                                            <span class="badge badge-phoenix fs--2 badge-phoenix-primary">MEDIUM</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-phoenix fs--2 badge-phoenix-secondary">LOW</span>
                                        }
                                    </td>
                                    @* Menu *@
                                    <td class="align-middle text-end white-space-nowrap pe-0 action">
                                        <div class="font-sans-serif btn-reveal-trigger position-static">
                                            <button class="btn btn-sm dropdown-toggle dropdown-caret-none transition-none btn-reveal fs--2" type="button" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false" data-bs-reference="parent"><span class="fas fa-ellipsis-h fs--2"></span></button>
                                            @{
                                                bool isUserProjectPM = (await ProjectService.GetProjectManagerAsync(project.Id))?.Id == dustUser.Id;
                                            }
                                            <div class="dropdown-menu dropdown-menu-end py-2">
                                                <a class="dropdown-item" asp-action="Details" asp-route-id="@project.Id">View</a>
                                                @if (User.IsInRole(nameof(RolesEnum.Admin)) || isUserProjectPM)
                                                {
                                                    <div class="dropdown-divider">
                                                    </div>
                                                    <a class="dropdown-item text-success" asp-action="Restore" asp-route-id="@project.Id">Restore</a>
                                                }
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="d-flex flex-wrap align-items-center justify-content-between py-3 pe-0 fs--1 border-bottom border-200">
                    <div class="d-flex">
                        <p class="mb-0 d-none d-sm-block me-3 fw-semi-bold text-900" data-list-info="data-list-info"></p><a class="fw-semi-bold" href="#!" data-list-view="*">View all<span class="fas fa-angle-right ms-1" data-fa-transform="down-1"></span></a><a class="fw-semi-bold d-none" href="#!" data-list-view="less">View Less<span class="fas fa-angle-right ms-1" data-fa-transform="down-1"></span></a>
                    </div>
                    <div class="d-flex">
                        <button class="page-link" data-list-pagination="prev"><span class="fas fa-chevron-left"></span></button>
                        <ul class="mb-0 pagination"></ul>
                        <button class="page-link pe-0" data-list-pagination="next"><span class="fas fa-chevron-right"></span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ===============================================-->
    <!--    End of Main Content-->
    <!-- ===============================================-->
</body>

</html>