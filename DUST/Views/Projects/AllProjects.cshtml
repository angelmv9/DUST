@model IEnumerable<DUST.Models.Project>

@using DUST.Models.Enums
@using Microsoft.AspNetCore.Identity
@using DUST.Services.Interfaces 

@inject UserManager<DUSTUser> UserManager
@inject IProjectService ProjectService

@{
    ViewData["Title"] = "All Projects";
    DUSTUser dustUser = await UserManager.GetUserAsync(User);
}

<h1>All Projects</h1>

@if (User.IsInRole(nameof(RolesEnum.Admin)) || User.IsInRole(nameof(RolesEnum.ProjectManager)))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                Progress
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th>
                Project Manager
            </th>
            <th>
                Members
            </th>           
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var project in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => project.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => project.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => project.EndDate)
                </td>
                <td>
                    <div class="progress-container progress-info m-b-25">
                                <span class="progress-badge" style="font-size:small">Project Status</span>
                                <div class="progress">
                                    @{
                                        var start = project.StartDate.DateTime;
                                        var end = project.EndDate.DateTime;
                                        var today = DateTime.Now;
                                        var percent = today >= end ? 100 :
                                                      today < start ? 0 :
                                                      Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                    }
                                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                        <span class="progress-value">@percent%</span>
                                    </div>
                                </div>
                            </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => project.ProjectPriority.Name)
                </td>
                <td>
                    @{
                        string fullName = (await ProjectService.GetProjectManagerAsync(project.Id))?.FullName;
                    }
                    @fullName
                </td>
                <td>
                    @foreach (var member in project.Members)
                    {
                        <a href="javascript:void(0);">
                            @if (member?.AvatarByteData != null)
                            {
                                <img class="media-object rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(member.AvatarByteData))" />
                            }
                            else
                            {
                                <img class="media-object rounded-circle" src="~/img/defaultUserImage.png" style="width:30px; height: 30px" />
                            }
                        </a>
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@project.Id">Details</a>

                    @{ 
                        bool isProjectPM = (await ProjectService.GetProjectManagerAsync(project.Id))?.Id == dustUser.Id;
                    }

                    @if (User.IsInRole(nameof(RolesEnum.Admin)) || isProjectPM)
                    {
                        <a asp-action="Edit" asp-route-id="@project.Id">Edit</a>
                        @if (!project.Archived)
                        {
                            <a asp-action="Archive" asp-route-id="@project.Id">Archive</a>
                        }
                        else
                        {
                            <a asp-action="Restore" asp-route-id="@project.Id">Restore</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
